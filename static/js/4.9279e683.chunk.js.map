{"version":3,"sources":["Components/DataTable/DataTableView.js","AppConfig.js","Services/APIService/APIService.js","Services/DataService/DataService.js","Components/DataTable/DataTable.js"],"names":["DataTableView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selected","rowSelected","selectionChanged","columns","id","width","Header","react_default","a","createElement","accessor","d","getProps","rowInfo","column","style","textAlign","className","height","src","thumbnailUrl","title","toUpperCase","url","slice","pageSizeOptions","_this2","console","log","data","Fragment","es","resizable","showPageJump","defaultPageSize","getTrProps","row","onClick","e","t","_onRowClick","index","setState","background","color","Component","AppConfig","base_url","api_base_url","APIService","initInterceptor","axios","interceptors","request","use","config","error","Promise","reject","response","status","window","location","href","unauthorizedUrl","get","post","Error","DataService","then","DataTable","getData","bind","assertThisInitialized","getRequiredData","_rowClickHandler","Components_DataTable_DataTableView","assign"],"mappings":"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","file":"static/js/4.9279e683.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport \"./DataTableView.css\";\r\nimport AlbumInfo from \"../AlbumInfo/AlbumInfo\";\r\n\r\nclass DataTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: null,\r\n      rowSelected: null,\r\n      selectionChanged: false,\r\n      columns: [\r\n        {\r\n          id: \"id\",\r\n          width: 50,\r\n          Header: props => <span>ID</span>,\r\n          accessor: d => d.id,\r\n          getProps: (state, rowInfo, column) => {\r\n            return {\r\n              style: {\r\n                textAlign: \"center\"\r\n              }\r\n            };\r\n          }\r\n        },\r\n        {\r\n          id: \"image\",\r\n          Header: props => <span>Photo</span>,\r\n          accessor: d => {\r\n            return (\r\n              <div>\r\n                <img className=\"images\" height={30} src={d.thumbnailUrl} />\r\n              </div>\r\n            );\r\n          },\r\n\r\n          getProps: (state, rowInfo, column) => {\r\n            return {\r\n              style: {\r\n                textAlign: \"center\"\r\n              }\r\n            };\r\n          }\r\n        },\r\n        {\r\n          id: \"name\",\r\n          Header: \"Name\",\r\n          accessor: d => d.title.toUpperCase()\r\n        },\r\n        {\r\n          id: \"code\",\r\n          Header: \"Code\",\r\n          accessor: d => \" Color Code = #\" + d.url.toUpperCase().slice(32, 100)\r\n        },\r\n        {\r\n          id: \"description\",\r\n          Header: \"URL\",\r\n          accessor: d => d.url\r\n        }\r\n      ],\r\n      pageSizeOptions: [100, 250, 500, 1000, 5000]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(\"from view \", this.props.data);\r\n    return (\r\n      <React.Fragment>\r\n        <ReactTable\r\n          className=\"-striped -highlight\"\r\n          resizable={true}\r\n          showPageJump\r\n          defaultPageSize={50}\r\n          data={this.props.data}\r\n          columns={this.state.columns}\r\n          pageSizeOptions={this.state.pageSizeOptions}\r\n          getTrProps={(state, rowInfo) => {\r\n            if (rowInfo && rowInfo.row) {\r\n              return {\r\n                onClick: (e, t) => {\r\n                  this.props._onRowClick(e, t, rowInfo);\r\n                  if (rowInfo.index !== this.state.rowSelected) {\r\n                    this.setState({\r\n                      rowSelected: rowInfo.index,\r\n                      selectionChanged: this.state.selectionChanged\r\n                        ? false\r\n                        : true\r\n                    });\r\n                  } else {\r\n                    this.setState({\r\n                      rowSelected: null\r\n                    });\r\n                  }\r\n                },\r\n                style: {\r\n                  background:\r\n                    rowInfo.index === this.state.rowSelected\r\n                      ? \"#eaeaea\"\r\n                      : \"white\",\r\n                  color: \"#444444\"\r\n                }\r\n              };\r\n            } else {\r\n              return {};\r\n            }\r\n          }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTableView;\r\n","const AppConfig = {\r\n  base_url: \"\",\r\n  api_base_url: \"https://jsonplaceholder.typicode.com/photos\",\r\n  \r\n};\r\n\r\nexport default AppConfig;\r\n","import axios from \"axios\";\r\nimport AppConfig from \"../../AppConfig\";\r\n\r\nclass APIService {\r\n  static initInterceptor = () => {\r\n    axios.interceptors.request.use(\r\n      function(config) {\r\n        // if (config.url.indexOf('api') > -1) {\r\n        //     config.url = UtilService.getApiUrl(config.url, UtilService.getHostName());\r\n        // }\r\n\r\n        return config;\r\n      },\r\n      function(error) {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        if (error.response && error.response.status === 401)\r\n          window.location.href = AppConfig.unauthorizedUrl;\r\n        else return Promise.reject(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  static get = (url, config) => {\r\n    return config ? axios.get(url, config) : axios.get(url);\r\n  };\r\n\r\n  static post = (url, data, config) => {\r\n    if (!data) {\r\n      throw new Error(\"Error: Post data not provided for \" + url);\r\n    }\r\n    return config ? axios.post(url, data, config) : axios.post(url, data);\r\n  };\r\n}\r\n\r\nAPIService.initInterceptor();\r\n\r\nexport default APIService;\r\n","import APIService from \"../APIService/APIService\";\r\n\r\nclass DataService {\r\n  constructor() {}\r\n\r\n  getRequiredData() {\r\n    return APIService.get(`https://jsonplaceholder.typicode.com/photos`).then(\r\n      response => {\r\n        return response.data;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataService;\r\n","import React, { Component } from \"react\";\r\nimport DataTableView from \"./DataTableView\";\r\nimport DataService from \"./../../Services/DataService/DataService\";\r\n\r\nclass DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n\r\n    this.DataService = new DataService();\r\n    this.getData = this.getData.bind(this);\r\n\r\n    this._onRowClick = this._onRowClick.bind(this);\r\n  }\r\n\r\n  getData() {\r\n    this.DataService.getRequiredData().then(data => {\r\n      console.log(\"Getting Data\");\r\n      this.setState({\r\n        data: data\r\n      });\r\n      console.log(\"Updated Data\", this.state.data);\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  _onRowClick(e, t, rowInfo) {\r\n    this.props._rowClickHandler(rowInfo);\r\n  }\r\n\r\n  render() {\r\n    return <DataTableView {...this.state} _onRowClick={this._onRowClick} />;\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n"],"sourceRoot":""}