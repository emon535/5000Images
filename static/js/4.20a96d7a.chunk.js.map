{"version":3,"sources":["Paginator/Paginator.js","Components/ImageList.js"],"names":["Paginator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activePage","totalPageNumber","getTotalPageNumber","onChangePage","bind","assertThisInitialized","number","console","log","startIndex","numberOfItemPerPage","endIndex","listLength","setState","handleChangePage","nextProps","Math","ceil","_this2","items","_loop","push","react_default","a","createElement","PaginationItem","key","active","onClick","Fragment","className","Pagination","bsSize","PaginationLink","previous","href","disabled","next","Component","ImageList","persons","axios","get","then","res","data","images","slice","map","eachperson","Col","sm","src","url","title","nextProp","_this3","Paginator_Paginator","length","Container","Row","_getImageList","_getPaginator"],"mappings":"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","file":"static/js/4.20a96d7a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\r\n\r\nexport default class Paginator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activePage: 1,\r\n      totalPageNumber: this.getTotalPageNumber(this.props)\r\n    };\r\n    this.onChangePage = this.onChangePage.bind(this);\r\n  }\r\n\r\n  onChangePage(number) {\r\n    if (number === 0 || number > this.state.totalPageNumber) return;\r\n    console.log(number);\r\n    let startIndex = this.props.numberOfItemPerPage * (number - 1);\r\n    let endIndex =\r\n      this.props.numberOfItemPerPage * number < this.props.listLength\r\n        ? this.props.numberOfItemPerPage * number\r\n        : this.props.listLength;\r\n    console.log(startIndex, endIndex);\r\n    this.setState({\r\n      activePage: number\r\n    });\r\n\r\n    this.props.handleChangePage(startIndex, endIndex);\r\n    console.log(startIndex, endIndex);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.listLength && nextProps.numberOfItemPerPage) {\r\n      this.setState({\r\n        totalPageNumber: this.getTotalPageNumber(nextProps)\r\n      });\r\n    }\r\n  }\r\n\r\n  getTotalPageNumber(props) {\r\n    return Math.ceil(props.listLength / props.numberOfItemPerPage);\r\n  }\r\n\r\n  render() {\r\n    let items = [];\r\n    for (let number = 1; number <= this.state.totalPageNumber; number++) {\r\n      items.push(\r\n        <PaginationItem\r\n          key={number}\r\n          active={this.state.activePage === number}\r\n          onClick={() => this.onChangePage(number)}\r\n        >\r\n          {number}\r\n        </PaginationItem>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"pagination-wrapper\">\r\n          <Pagination bsSize=\"medium\" className=\"\">\r\n            <PaginationItem className=\"\">\r\n              <PaginationLink\r\n                previous\r\n                href=\"#\"\r\n                disabled={this.state.activePage === 1}\r\n                onClick={() => this.onChangePage(this.state.activePage - 1)}\r\n              />\r\n            </PaginationItem>\r\n            {items}\r\n            <PaginationLink\r\n              next\r\n              href=\"#\"\r\n              disabled={this.state.activePage === this.state.totalPageNumber}\r\n              onClick={() => this.onChangePage(this.state.activePage + 1)}\r\n            />\r\n          </Pagination>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Container } from \"reactstrap\";\r\nimport \"./ImageList.css\";\r\nimport Paginator from \"./../Paginator/Paginator\";\r\n\r\nclass ImageList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      persons: [],\r\n      numberOfItemPerPage: 200,\r\n      startIndex: 0,\r\n      endIndex: 12\r\n    };\r\n\r\n    this.handleChangePage = this.handleChangePage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://jsonplaceholder.typicode.com/photos`).then(res => {\r\n      const persons = res.data;\r\n      this.setState({ persons });\r\n    });\r\n  }\r\n\r\n  _getImageList(images) {\r\n    return images\r\n      .slice(this.state.startIndex, this.state.endIndex)\r\n      .map(eachperson => (\r\n        <React.Fragment>\r\n          <Col sm={4}>\r\n            <div className=\"imageBox\">\r\n              <img className=\"images\" src={eachperson.url} />\r\n              <div className=\"title\">{eachperson.title}</div>\r\n            </div>\r\n          </Col>\r\n        </React.Fragment>\r\n      ));\r\n  }\r\n\r\n  componentWillReceiveProps(nextProp) {\r\n    let endIndex = this.state.startIndex + this.state.numberOfItemPerPage;\r\n    console.log(\"CompwillMou:\", endIndex, this.state.startIndex);\r\n    this.setState({\r\n      endIndex\r\n    });\r\n  }\r\n\r\n  handleChangePage = (startIndex, endIndex) => {\r\n    console.log(endIndex, this.state.startIndex);\r\n    this.setState({\r\n      endIndex\r\n    });\r\n    console.log(\"from HandlePage\", startIndex, endIndex);\r\n    this.setState({ startIndex, endIndex });\r\n  };\r\n\r\n  _getPaginator() {\r\n    return (\r\n      <Col sm={12}>\r\n        <Paginator\r\n          listLength={this.state.persons.length}\r\n          numberOfItemPerPage={this.state.numberOfItemPerPage}\r\n          // handleChangePage={this.state.handleChangePage}\r\n          handleChangePage={() => this.handleChangePage()}\r\n        />\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>{this._getImageList(this.state.persons)}</Row>\r\n\r\n        <Row>{this._getPaginator()}</Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageList;\r\n"],"sourceRoot":""}