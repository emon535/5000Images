{"version":3,"sources":["Components/DataTable/DataTableView.js","AppConfig.js","Services/APIService/APIService.js","Services/DataService/DataService.js","Components/DataTable/DataTable.js"],"names":["DataTableView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selected","rowEdit","selectionChanged","columns","id","Header","react_default","a","createElement","accessor","d","width","getProps","rowInfo","column","style","textAlign","className","height","src","thumbnailUrl","title","toUpperCase","url","slice","pageSizeOptions","_this2","console","log","data","Fragment","es","resizable","defaultResized","showPageJump","defaultPageSize","getTrProps","row","onClick","e","t","_onRowClick","index","setState","selectedRowIndex","original","background","color","Component","AppConfig","base_url","api_base_url","APIService","initInterceptor","axios","interceptors","request","use","config","error","Promise","reject","response","status","window","location","href","unauthorizedUrl","get","post","Error","DataService","then","DataTable","showAlbumInfo","getData","bind","assertThisInitialized","_passRowInfo","_rowClickHandler","getRequiredData","Components_DataTable_DataTableView","assign"],"mappings":"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","file":"static/js/5.c366be37.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport \"./DataTableView.css\";\nimport AlbumInfo from \"../AlbumInfo/AlbumInfo\";\n\nclass DataTableView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      rowEdit: null,\n      selectionChanged: false,\n      columns: [\n        {\n          id: \"id\",\n          Header: props => <span>ID</span>,\n          accessor: d => d.id,\n          width: \"10%\",\n          getProps: (state, rowInfo, column) => {\n            return {\n              style: {\n                textAlign: \"center\"\n              },\n            };\n          }\n        },\n        {\n          id: \"image\",\n          Header: props => <span>Photo</span>,\n          accessor: d => {\n            return (\n              <div>\n                <img className=\"images\" height={30} src={d.thumbnailUrl} />\n              </div>\n            );\n          },\n\n          getProps: (state, rowInfo, column) => {\n            return {\n              style: {\n                textAlign: \"center\"\n              },\n            };\n          }\n        },\n        {\n          id: \"name\",\n          Header: \"Name\",\n\n          accessor: d => d.title.toUpperCase(),\n\n        },\n        {\n          id: \"code\",\n          Header: \"Code\",\n          accessor: d => \" Color Code = #\" + d.url.toUpperCase().slice(32, 100),\n\n        },\n        {\n          id: \"description\",\n          Header: \"URL\",\n\n          accessor: d => d.url,\n\n        }\n      ],\n      pageSizeOptions: [100, 250, 500, 1000, 5000],\n    };\n\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(\"from view \", this.props.data);\n    return (\n      <React.Fragment>\n        <ReactTable\n          className=\"-striped -highlight\"\n          resizable={true}\n          defaultResized={this.state.defaultResized}\n          showPageJump\n          defaultPageSize={50}\n          data={this.props.data}\n          columns={this.state.columns}\n          pageSizeOptions={this.state.pageSizeOptions}\n          getTrProps={(state, rowInfo) => {\n            if (rowInfo && rowInfo.row) {\n              return {\n                onClick: (e, t) => {\n                  console.log(\"inside\");\n                  this.props._onRowClick(e, t, rowInfo);\n                  if (rowInfo.index !== this.state.rowEdit) {\n                    this.setState({\n                      rowEdit: rowInfo.index,\n                      selectedRowIndex: rowInfo.original,\n                      selectionChanged: this.state.selectionChanged\n                        ? false\n                        : true\n                    });\n                  } else {\n                    this.setState({\n                      rowEdit: null\n                    });\n                  }\n\n                },\n                style: {\n                  background:\n                    rowInfo.index === this.state.rowEdit ? \"#eaeaea\" : \"white\",\n                  color: \"#444444\"\n                }\n              };\n            } else {\n              return {};\n            }\n          }}\n        />\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DataTableView;\n","const AppConfig = {\n  base_url: \"\",\n  api_base_url: \"https://jsonplaceholder.typicode.com/photos\",\n  \n};\n\nexport default AppConfig;\n","import axios from \"axios\";\nimport AppConfig from \"../../AppConfig\";\n\nclass APIService {\n  static initInterceptor = () => {\n    axios.interceptors.request.use(\n      function(config) {\n        // if (config.url.indexOf('api') > -1) {\n        //     config.url = UtilService.getApiUrl(config.url, UtilService.getHostName());\n        // }\n\n        return config;\n      },\n      function(error) {\n        return Promise.reject(error);\n      }\n    );\n\n    axios.interceptors.response.use(\n      response => response,\n      error => {\n        if (error.response && error.response.status === 401)\n          window.location.href = AppConfig.unauthorizedUrl;\n        else return Promise.reject(error);\n      }\n    );\n  };\n\n  static get = (url, config) => {\n    return config ? axios.get(url, config) : axios.get(url);\n  };\n\n  static post = (url, data, config) => {\n    if (!data) {\n      throw new Error(\"Error: Post data not provided for \" + url);\n    }\n    return config ? axios.post(url, data, config) : axios.post(url, data);\n  };\n}\n\nAPIService.initInterceptor();\n\nexport default APIService;\n","import APIService from \"../APIService/APIService\";\n\nclass DataService {\n  constructor() {}\n\n  getRequiredData() {\n    return APIService.get(`https://jsonplaceholder.typicode.com/photos`).then(\n      response => {\n        return response.data;\n      }\n    );\n  }\n}\n\nexport default DataService;\n","import React, { Component } from \"react\";\nimport DataTableView from \"./DataTableView\";\nimport DataService from \"./../../Services/DataService/DataService\";\n\nclass DataTable extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"From DataTable\", this.props.data);\n    this.state = {\n      data: [],\n      rowInfo: {\n        index: 1\n      },\n      showAlbumInfo: this.props.showAlbumInfo\n    };\n\n    this.DataService = new DataService();\n    this.getData = this.getData.bind(this);\n    this._passRowInfo = this._passRowInfo.bind(this);\n\n    this._onRowClick = this._onRowClick.bind(this);\n  }\n\n\n  componentDidMount() {\n    this.getData();\n  }\n\n\n\n  _onRowClick(e, t, rowInfo) {\n    console.log(\"from DataTable\", rowInfo)\n    this.setState({\n      selected: rowInfo.index,\n      showAlbumInfo: true,\n      rowInfo: rowInfo.original\n    });\n    this.props._rowClickHandler(rowInfo);\n\n  }\n\n  _passRowInfo() {\n    this.setState({\n      rowInfo: this.props.rowInfo\n    })\n  }\n\n\n  getData() {\n    this.DataService.getRequiredData().then(data => {\n      console.log(\"Getting Data\");\n      this.setState({\n        data: data\n      });\n      console.log(\"Updated Data\", this.state.data);\n    });\n  }\n\n  render() {\n    return <DataTableView {...this.state} _onRowClick={this._onRowClick} />;\n  }\n}\n\nexport default DataTable;\n"],"sourceRoot":""}