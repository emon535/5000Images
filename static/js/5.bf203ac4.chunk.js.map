{"version":3,"sources":["Components/AlbumInfo/AlbumInfo.js","Components/DataTable/DataTableView.js","AppConfig.js","Services/APIService/APIService.js","Services/DataService/DataService.js","Components/DataTable/DataTable.js"],"names":["AlbumInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hideme","_getAlbumInfo","bind","assertThisInitialized","albumInfo","react_default","a","createElement","Container","className","Jumbotron","Button","color","onClick","onHideClick","id","src","thumbnailUrl","title","url","rowInfo","console","log","Fragment","Component","DataTableView","showAlbumInfo","selected","columns","Header","accessor","d","width","height","toUpperCase","slice","pageSizeOptions","defaultResized","_onRowClick","_this2","Components_AlbumInfo_AlbumInfo","setState","e","t","index","original","_this3","data","_showAlbumInfo","es","resizable","showPageJump","defaultPageSize","getTrProps","column","style","background","AppConfig","base_url","api_base_url","APIService","initInterceptor","axios","interceptors","request","use","config","error","Promise","reject","response","status","window","location","href","unauthorizedUrl","get","post","Error","DataService","then","DataTable","getData","getRequiredData","Components_DataTable_DataTableView"],"mappings":"+PAiDeA,qBA5Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,QAAQ,GAGVR,EAAKS,cAAgBT,EAAKS,cAAcC,KAAnBT,OAAAU,EAAA,EAAAV,CAAAD,IANJA,6EASLY,GACZ,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,sBACnBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWD,UAAU,aACnBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eACXJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAASlB,KAAKJ,MAAMuB,aAAzC,SAIFT,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,IAA4BL,EAAUW,IACtCV,EAAAC,EAAAC,cAAA,OAAKS,IAAKZ,EAAUa,eACpBZ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaL,EAAUc,OACrCb,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAb,+bASAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACbL,EAAUe,uCAOjB,IAAMf,EAAYT,KAAKJ,MAAM6B,QAE7B,OADAC,QAAQC,IAAI3B,KAAKJ,OACVc,EAAAC,EAAAC,cAACF,EAAAC,EAAMiB,SAAP,KAAiB5B,KAAKM,cAAcG,WAzCvBoB,cCmHTC,cA/Gb,SAAAA,EAAYlC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,IACjBjC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAA3B,KAAAH,KAAMJ,KACDQ,MAAQ,CACX2B,eAAe,EACfC,SAAU,KACVP,QAAS,KACTQ,QAAS,CACP,CACEb,GAAI,KACJc,OAAQ,SAAAtC,GAAK,OAAIc,EAAAC,EAAAC,cAAA,mBACjBuB,SAAU,SAAAC,GAAC,OAAIA,EAAEhB,IACjBiB,MAAO,IAET,CACEjB,GAAI,QACJc,OAAQ,SAAAtC,GAAK,OAAIc,EAAAC,EAAAC,cAAA,sBACjBuB,SAAU,SAAAC,GACR,OACE1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASwB,OAAQ,GAAIjB,IAAKe,EAAEd,iBAIjDe,MAAO,KAET,CACEjB,GAAI,OACJc,OAAQ,OACRC,SAAU,SAAAC,GAAC,OAAIA,EAAEb,MAAMgB,eACvBF,MAAO,KAET,CACEjB,GAAI,OACJc,OAAQ,OACRC,SAAU,SAAAC,GAAC,MAAI,kBAAoBA,EAAEZ,IAAIe,cAAcC,MAAM,GAAI,MACjEH,MAAO,KAET,CACEjB,GAAI,cACJc,OAAQ,MACRC,SAAU,SAAAC,GAAC,OAAIA,EAAEZ,KACjBa,MAAO,MAGXI,gBAAiB,CAAC,IAAK,IAAK,IAAK,IAAM,KACvCC,eAAgB,CAAC,IAAK,IAAK,GAAI,IAGjC7C,EAAK8C,YAAc9C,EAAK8C,YAAYpC,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAKsB,YAActB,EAAKsB,YAAYZ,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IAjDFA,gFAoDF,IAAA+C,EAAA5C,KACf,OACEA,KAAKI,MAAM2B,eACTrB,EAAAC,EAAAC,cAACiC,EAAD,CACEpB,QAASzB,KAAKI,MAAMqB,QACpBN,YAAa,kBAAMyB,EAAKzB,uDAO9B,OAAOnB,KAAK8C,SAAS,CACnBf,eAAe,wCAIPgB,EAAGC,EAAGvB,GAChBzB,KAAK8C,SAAS,CACZd,SAAUP,EAAQwB,MAClBlB,eAAe,EACfN,QAASA,EAAQyB,WAEnBxB,QAAQC,IAAIF,EAASsB,EAAGC,EAAGvB,EAAQyB,SAAS1B,IAAKC,EAAQyB,SAAS9B,qCAG3D,IAAA+B,EAAAnD,KAGP,OAFA0B,QAAQC,IAAI3B,KAAKJ,OACjB8B,QAAQC,IAAI,aAAc3B,KAAKJ,MAAMwD,MAEnC1C,EAAAC,EAAAC,cAACF,EAAAC,EAAMiB,SAAP,KACG5B,KAAKqD,iBACN3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,mBACnBJ,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CACExC,UAAU,sBACVyC,WAAW,EACXb,eAAgB1C,KAAKI,MAAMsC,eAC3Bc,cAAY,EACZC,gBAAiB,GACjBL,KAAMpD,KAAKJ,MAAMwD,KACjBnB,QAASjC,KAAKI,MAAM6B,QACpBQ,gBAAiBzC,KAAKI,MAAMqC,gBAC5BiB,WAAY,SAACtD,EAAOqB,EAASkC,GAC3B,MAAO,CACLzC,QAAS,SAAC6B,EAAGC,GACXG,EAAKR,YAAYI,EAAGC,EAAGvB,IAEzBmC,MAAO,CACLC,WAAYpC,GAAWrB,EAAM4B,SAAW,QAAU,wBArGxCH,8BCDbiC,EANG,CAChBC,SAAU,GACVC,aAAc,+CCCVC,sCACGC,gBAAkB,WACvBC,IAAMC,aAAaC,QAAQC,IACzB,SAASC,GAKP,OAAOA,GAET,SAASC,GACP,OAAOC,QAAQC,OAAOF,KAI1BL,IAAMC,aAAaO,SAASL,IAC1B,SAAAK,GAAQ,OAAIA,GACZ,SAAAH,GACE,IAAIA,EAAMG,UAAsC,MAA1BH,EAAMG,SAASC,OAEhC,OAAOH,QAAQC,OAAOF,GADzBK,OAAOC,SAASC,KAAOjB,EAAUkB,mBAnBrCf,EAyBGgB,IAAM,SAACzD,EAAK+C,GACjB,OAAOA,EAASJ,IAAMc,IAAIzD,EAAK+C,GAAUJ,IAAMc,IAAIzD,IA1BjDyC,EA6BGiB,KAAO,SAAC1D,EAAK4B,EAAMmB,GACxB,IAAKnB,EACH,MAAM,IAAI+B,MAAM,qCAAuC3D,GAEzD,OAAO+C,EAASJ,IAAMe,KAAK1D,EAAK4B,EAAMmB,GAAUJ,IAAMe,KAAK1D,EAAK4B,IAIpEa,EAAWC,kBAEID,QC5BAmB,aAXb,SAAAA,IAAetF,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,iEAGb,OAAOnB,EAAWgB,IAAX,+CAA8DI,KACnE,SAAAV,GACE,OAAOA,EAASvB,gBCJlBkC,cACJ,SAAAA,EAAY1F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,GACjBzF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwF,GAAAnF,KAAAH,KAAMJ,IACN8B,QAAQC,IAAI,iBAAkB9B,EAAKD,MAAMwD,MACzCvD,EAAKO,MAAQ,CACXgD,KAAM,IAGRvD,EAAKuF,YAAc,IAAIA,EACvBvF,EAAK0F,QAAU1F,EAAK0F,QAAQhF,KAAbT,OAAAU,EAAA,EAAAV,CAAAD,IAREA,mFAYjBG,KAAKuF,4CAGG,IAAA3C,EAAA5C,KACRA,KAAKoF,YAAYI,kBAAkBH,KAAK,SAAAjC,GACtC1B,QAAQC,IAAI,gBACZiB,EAAKE,SAAS,CACZM,KAAMA,IAER1B,QAAQC,IAAI,eAAgBiB,EAAKxC,MAAMgD,yCAKzC,OAAO1C,EAAAC,EAAAC,cAAC6E,EAAkBzF,KAAKI,cA3BXyB,aA+BTyD","file":"static/js/5.bf203ac4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Jumbotron, Button } from \"reactstrap\";\r\nimport \"./AlbumInfo.css\";\r\n\r\nclass AlbumInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hideme: false\r\n    };\r\n\r\n    this._getAlbumInfo = this._getAlbumInfo.bind(this);\r\n  }\r\n\r\n  _getAlbumInfo(albumInfo) {\r\n    return (\r\n      <Container className=\"album-info-wrapper\">\r\n        <Jumbotron className=\"album-jum\">\r\n          <p className=\"hide-button\">\r\n            <Button color=\"dark\" onClick={this.props.onHideClick}>\r\n              hide\r\n            </Button>\r\n          </p>\r\n          <h1 className=\"display-1\">#{albumInfo.id}</h1>\r\n          <img src={albumInfo.thumbnailUrl} />\r\n          <h3 className=\"display-4\">{albumInfo.title}</h3>\r\n          <p className=\"lead\">\r\n            Mauris ipsum. Nulla metus metus, ullamcorper vel, tincidunt sed,\r\n            euismod in, nibh. Quisque volutpat condimentum velit. Class aptent\r\n            taciti sociosqu ad litora torquent per conubia nostra, per inceptos\r\n            himenaeos. Nam nec ante. Sed lacinia, urna non tincidunt mattis,\r\n            tortor neque adipiscing diam, a cursus ipsum ante quis turpis. Nulla\r\n            facilisi. Ut fringilla. Suspendisse potenti. Nunc feugiat mi a\r\n            tellus consequat imperdiet. Vestibulum sapien.\r\n          </p>\r\n          <hr className=\"my-2\" />\r\n          {albumInfo.url}\r\n        </Jumbotron>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const albumInfo = this.props.rowInfo;\r\n    console.log(this.props);\r\n    return <React.Fragment>{this._getAlbumInfo(albumInfo)}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default AlbumInfo;\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Container } from \"reactstrap\";\r\nimport \"./DataTableView.css\";\r\nimport AlbumInfo from \"../AlbumInfo/AlbumInfo\";\r\n\r\nclass DataTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAlbumInfo: false,\r\n      selected: null,\r\n      rowInfo: null,\r\n      columns: [\r\n        {\r\n          id: \"id\",\r\n          Header: props => <span>ID</span>,\r\n          accessor: d => d.id,\r\n          width: 80\r\n        },\r\n        {\r\n          id: \"image\",\r\n          Header: props => <span>Photo</span>,\r\n          accessor: d => {\r\n            return (\r\n              <div>\r\n                <img className=\"images\" height={30} src={d.thumbnailUrl} />\r\n              </div>\r\n            );\r\n          },\r\n          width: 120\r\n        },\r\n        {\r\n          id: \"name\",\r\n          Header: \"Name\",\r\n          accessor: d => d.title.toUpperCase(),\r\n          width: 400\r\n        },\r\n        {\r\n          id: \"code\",\r\n          Header: \"Code\",\r\n          accessor: d => \" Color Code = #\" + d.url.toUpperCase().slice(32, 100),\r\n          width: 180\r\n        },\r\n        {\r\n          id: \"description\",\r\n          Header: \"URL\",\r\n          accessor: d => d.url,\r\n          width: 250\r\n        }\r\n      ],\r\n      pageSizeOptions: [100, 250, 500, 1000, 5000],\r\n      defaultResized: [100, 100, 10, 1]\r\n    };\r\n\r\n    this._onRowClick = this._onRowClick.bind(this);\r\n    this.onHideClick = this.onHideClick.bind(this);\r\n  }\r\n\r\n  _showAlbumInfo() {\r\n    return (\r\n      this.state.showAlbumInfo && (\r\n        <AlbumInfo\r\n          rowInfo={this.state.rowInfo}\r\n          onHideClick={() => this.onHideClick()}\r\n        />\r\n      )\r\n    );\r\n  }\r\n  \r\n  onHideClick() {\r\n    return this.setState({\r\n      showAlbumInfo: false\r\n    });\r\n  }\r\n\r\n  _onRowClick(e, t, rowInfo) {\r\n    this.setState({\r\n      selected: rowInfo.index,\r\n      showAlbumInfo: true,\r\n      rowInfo: rowInfo.original\r\n    });\r\n    console.log(rowInfo, e, t, rowInfo.original.url, rowInfo.original.id);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(\"from view \", this.props.data);\r\n    return (\r\n      <React.Fragment>\r\n        {this._showAlbumInfo()}\r\n        <Container className=\"container-class\">\r\n          <ReactTable\r\n            className=\"-striped -highlight\"\r\n            resizable={true}\r\n            defaultResized={this.state.defaultResized}\r\n            showPageJump\r\n            defaultPageSize={50}\r\n            data={this.props.data}\r\n            columns={this.state.columns}\r\n            pageSizeOptions={this.state.pageSizeOptions}\r\n            getTrProps={(state, rowInfo, column) => {\r\n              return {\r\n                onClick: (e, t) => {\r\n                  this._onRowClick(e, t, rowInfo);\r\n                },\r\n                style: {\r\n                  background: rowInfo && state.selected ? \"green\" : \"#6c757d\"\r\n                }\r\n              };\r\n            }}\r\n          />\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTableView;\r\n","const AppConfig = {\r\n  base_url: \"\",\r\n  api_base_url: \"https://jsonplaceholder.typicode.com/photos\",\r\n  \r\n};\r\n\r\nexport default AppConfig;\r\n","import axios from \"axios\";\r\nimport AppConfig from \"../../AppConfig\";\r\n\r\nclass APIService {\r\n  static initInterceptor = () => {\r\n    axios.interceptors.request.use(\r\n      function(config) {\r\n        // if (config.url.indexOf('api') > -1) {\r\n        //     config.url = UtilService.getApiUrl(config.url, UtilService.getHostName());\r\n        // }\r\n\r\n        return config;\r\n      },\r\n      function(error) {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        if (error.response && error.response.status === 401)\r\n          window.location.href = AppConfig.unauthorizedUrl;\r\n        else return Promise.reject(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  static get = (url, config) => {\r\n    return config ? axios.get(url, config) : axios.get(url);\r\n  };\r\n\r\n  static post = (url, data, config) => {\r\n    if (!data) {\r\n      throw new Error(\"Error: Post data not provided for \" + url);\r\n    }\r\n    return config ? axios.post(url, data, config) : axios.post(url, data);\r\n  };\r\n}\r\n\r\nAPIService.initInterceptor();\r\n\r\nexport default APIService;\r\n","import APIService from \"../APIService/APIService\";\r\n\r\nclass DataService {\r\n  constructor() {}\r\n\r\n  getRequiredData() {\r\n    return APIService.get(`https://jsonplaceholder.typicode.com/photos`).then(\r\n      response => {\r\n        return response.data;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataService;\r\n","import React, { Component } from \"react\";\r\nimport DataTableView from \"./DataTableView\";\r\nimport DataService from \"./../../Services/DataService/DataService\";\r\n\r\nclass DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"From DataTable\", this.props.data);\r\n    this.state = {\r\n      data: []\r\n    };\r\n\r\n    this.DataService = new DataService();\r\n    this.getData = this.getData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.DataService.getRequiredData().then(data => {\r\n      console.log(\"Getting Data\");\r\n      this.setState({\r\n        data: data\r\n      });\r\n      console.log(\"Updated Data\", this.state.data);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <DataTableView {...this.state} />;\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n"],"sourceRoot":""}