{"version":3,"sources":["Components/AlbumInfo/AlbumInfo.js","Components/DataTable/DataTableView.js","AppConfig.js","Services/APIService/APIService.js","Services/DataService/DataService.js","Components/DataTable/DataTable.js"],"names":["AlbumInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hideme","_getAlbumInfo","bind","assertThisInitialized","albumInfo","react_default","a","createElement","Container","className","Jumbotron","Button","color","onClick","onHideClick","id","src","thumbnailUrl","title","url","rowInfo","console","log","Fragment","Component","DataTableView","showAlbumInfo","selected","columns","Header","accessor","d","height","toUpperCase","slice","pageSizeOptions","_onRowClick","_this2","Components_AlbumInfo_AlbumInfo","setState","e","t","index","original","_this3","data","_showAlbumInfo","es","defaultPageSize","getTrProps","column","style","background","AppConfig","base_url","api_base_url","APIService","initInterceptor","axios","interceptors","request","use","config","error","Promise","reject","response","status","window","location","href","unauthorizedUrl","get","post","Error","DataService","then","DataTable","getData","getRequiredData","Components_DataTable_DataTableView"],"mappings":"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","file":"static/js/5.cbb6e1a7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Jumbotron, Button } from \"reactstrap\";\r\nimport \"./AlbumInfo.css\";\r\n\r\nclass AlbumInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hideme: false\r\n    };\r\n\r\n    this._getAlbumInfo = this._getAlbumInfo.bind(this);\r\n  }\r\n\r\n  _getAlbumInfo(albumInfo) {\r\n    return (\r\n      <Container className=\"album-info-wrapper\">\r\n        <Jumbotron className=\"album-jum\">\r\n          <p className=\"hide-button\">\r\n            <Button color=\"primary\" onClick={this.props.onHideClick}>\r\n              hide\r\n            </Button>\r\n          </p>\r\n          <h1 className=\"display-1\">#{albumInfo.id}</h1>\r\n          <img src={albumInfo.thumbnailUrl} />\r\n          <h3 className=\"display-4\">{albumInfo.title}</h3>\r\n          <p className=\"lead\">\r\n            Mauris ipsum. Nulla metus metus, ullamcorper vel, tincidunt sed,\r\n            euismod in, nibh. Quisque volutpat condimentum velit. Class aptent\r\n            taciti sociosqu ad litora torquent per conubia nostra, per inceptos\r\n            himenaeos. Nam nec ante. Sed lacinia, urna non tincidunt mattis,\r\n            tortor neque adipiscing diam, a cursus ipsum ante quis turpis. Nulla\r\n            facilisi. Ut fringilla. Suspendisse potenti. Nunc feugiat mi a\r\n            tellus consequat imperdiet. Vestibulum sapien.\r\n          </p>\r\n          <hr className=\"my-2\" />\r\n          {albumInfo.url}\r\n        </Jumbotron>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const albumInfo = this.props.rowInfo;\r\n    console.log(this.props);\r\n    return <React.Fragment>{this._getAlbumInfo(albumInfo)}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default AlbumInfo;\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Container } from \"reactstrap\";\r\nimport \"./DataTableView.css\";\r\nimport AlbumInfo from \"../AlbumInfo/AlbumInfo\";\r\n\r\nclass DataTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAlbumInfo: false,\r\n      selected: null,\r\n      rowInfo: null,\r\n      columns: [\r\n        {\r\n          id: \"id\",\r\n          Header: props => <span>ID</span>,\r\n          accessor: d => d.id\r\n        },\r\n        {\r\n          id: \"image\",\r\n          Header: props => <span>Photo</span>,\r\n          accessor: d => {\r\n            return (\r\n              <div>\r\n                <img className=\"images\" height={34} src={d.thumbnailUrl} />\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          id: \"name\",\r\n          Header: \"Name\",\r\n          accessor: d => d.title.toUpperCase()\r\n        },\r\n        {\r\n          id: \"url\",\r\n          Header: \"URL\",\r\n          accessor: d => d.url.toUpperCase().slice(15, 20) + \" Color\"\r\n        },\r\n        {\r\n          id: \"description\",\r\n          Header: \"Description\",\r\n          accessor: d => d.url.toUpperCase()\r\n        }\r\n      ],\r\n      pageSizeOptions: [100, 250, 500, 1000, 5000]\r\n    };\r\n\r\n    this._onRowClick = this._onRowClick.bind(this);\r\n    this.onHideClick = this.onHideClick.bind(this);\r\n  }\r\n\r\n  _showAlbumInfo() {\r\n    return (\r\n      this.state.showAlbumInfo && (\r\n        <AlbumInfo\r\n          rowInfo={this.state.rowInfo}\r\n          onHideClick={() => this.onHideClick()}\r\n        />\r\n      )\r\n    );\r\n  }\r\n\r\n  onHideClick() {\r\n    return this.setState({\r\n      showAlbumInfo: false\r\n    });\r\n  }\r\n\r\n  _onRowClick(e, t, rowInfo) {\r\n    this.setState({\r\n      selected: rowInfo.index,\r\n      showAlbumInfo: true,\r\n      rowInfo: rowInfo.original\r\n    });\r\n    console.log(rowInfo, e, t, rowInfo.original.url, rowInfo.original.id);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(\"from view \", this.props.data);\r\n    return (\r\n      <React.Fragment>\r\n        {this._showAlbumInfo()}\r\n        <Container className=\"container-class\">\r\n          <ReactTable\r\n            defaultPageSize={50}\r\n            data={this.props.data}\r\n            columns={this.state.columns}\r\n            pageSizeOptions={this.state.pageSizeOptions}\r\n            className=\"-striped -highlight\"\r\n            getTrProps={(state, rowInfo, column) => {\r\n              return {\r\n                onClick: (e, t) => {\r\n                  this._onRowClick(e, t, rowInfo);\r\n                },\r\n                style: {\r\n                  background: rowInfo && state.selected ? \"green\" : \"#6c757d\"\r\n                }\r\n              };\r\n            }}\r\n          />\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTableView;\r\n","const AppConfig = {\r\n  base_url: \"\",\r\n  api_base_url: \"https://jsonplaceholder.typicode.com/photos\",\r\n  \r\n};\r\n\r\nexport default AppConfig;\r\n","import axios from \"axios\";\r\nimport AppConfig from \"../../AppConfig\";\r\n\r\nclass APIService {\r\n  static initInterceptor = () => {\r\n    axios.interceptors.request.use(\r\n      function(config) {\r\n        // if (config.url.indexOf('api') > -1) {\r\n        //     config.url = UtilService.getApiUrl(config.url, UtilService.getHostName());\r\n        // }\r\n\r\n        return config;\r\n      },\r\n      function(error) {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        if (error.response && error.response.status === 401)\r\n          window.location.href = AppConfig.unauthorizedUrl;\r\n        else return Promise.reject(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  static get = (url, config) => {\r\n    return config ? axios.get(url, config) : axios.get(url);\r\n  };\r\n\r\n  static post = (url, data, config) => {\r\n    if (!data) {\r\n      throw new Error(\"Error: Post data not provided for \" + url);\r\n    }\r\n    return config ? axios.post(url, data, config) : axios.post(url, data);\r\n  };\r\n}\r\n\r\nAPIService.initInterceptor();\r\n\r\nexport default APIService;\r\n","import APIService from \"../APIService/APIService\";\r\n\r\nclass DataService {\r\n  constructor() {}\r\n\r\n  getRequiredData() {\r\n    return APIService.get(`https://jsonplaceholder.typicode.com/photos`).then(\r\n      response => {\r\n        return response.data;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataService;\r\n","import React, { Component } from \"react\";\r\nimport DataTableView from \"./DataTableView\";\r\nimport DataService from \"./../../Services/DataService/DataService\";\r\n\r\nclass DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"From DataTable\", this.props.data);\r\n    this.state = {\r\n      data: []\r\n    };\r\n\r\n    this.DataService = new DataService();\r\n    this.getData = this.getData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.DataService.getRequiredData().then(data => {\r\n      console.log(\"Getting Data\");\r\n      this.setState({\r\n        data: data\r\n      });\r\n      console.log(\"Updated Data\", this.state.data);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <DataTableView {...this.state} />;\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n"],"sourceRoot":""}