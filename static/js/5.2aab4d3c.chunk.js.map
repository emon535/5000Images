{"version":3,"sources":["Components/AlbumInfo/AlbumInfo.js","Components/DataTable/DataTableView.js","AppConfig.js","Services/APIService/APIService.js","Services/DataService/DataService.js","Components/DataTable/DataTable.js"],"names":["AlbumInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hideme","_getAlbumInfo","bind","assertThisInitialized","albumInfo","react_default","a","createElement","Container","className","Jumbotron","Button","color","onClick","onHideClick","id","src","thumbnailUrl","title","url","rowInfo","console","log","Fragment","Component","DataTableView","showAlbumInfo","selected","rowEdit","selectionChanged","columns","Header","accessor","d","width","height","toUpperCase","slice","pageSizeOptions","defaultResized","_onRowClick","_this2","Components_AlbumInfo_AlbumInfo","setState","e","t","index","original","_this3","data","_showAlbumInfo","es","resizable","showPageJump","defaultPageSize","getTrProps","row","selectedRowIndex","style","background","AppConfig","base_url","api_base_url","APIService","initInterceptor","axios","interceptors","request","use","config","error","Promise","reject","response","status","window","location","href","unauthorizedUrl","get","post","Error","DataService","then","DataTable","getData","getRequiredData","Components_DataTable_DataTableView"],"mappings":"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","file":"static/js/5.2aab4d3c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Jumbotron, Button } from \"reactstrap\";\nimport \"./AlbumInfo.css\";\n\nclass AlbumInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideme: false\n    };\n\n    this._getAlbumInfo = this._getAlbumInfo.bind(this);\n  }\n\n  _getAlbumInfo(albumInfo) {\n    return (\n      <Container className=\"album-info-wrapper\">\n        <Jumbotron className=\"album-jum\">\n          <p className=\"hide-button\">\n            <Button color=\"dark\" onClick={this.props.onHideClick}>\n              hide\n            </Button>\n          </p>\n          <h1 className=\"display-1\">#{albumInfo.id}</h1>\n          <img src={albumInfo.thumbnailUrl} />\n          <h3 className=\"display-4\">{albumInfo.title}</h3>\n          <p className=\"lead\">\n            Mauris ipsum. Nulla metus metus, ullamcorper vel, tincidunt sed,\n            euismod in, nibh. Quisque volutpat condimentum velit. Class aptent\n            taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n            himenaeos. Nam nec ante. Sed lacinia, urna non tincidunt mattis,\n            tortor neque adipiscing diam, a cursus ipsum ante quis turpis. Nulla\n            facilisi. Ut fringilla. Suspendisse potenti. Nunc feugiat mi a\n            tellus consequat imperdiet. Vestibulum sapien.\n          </p>\n          <hr className=\"my-2\" />\n          {albumInfo.url}\n        </Jumbotron>\n      </Container>\n    );\n  }\n\n  render() {\n    const albumInfo = this.props.rowInfo;\n    console.log(this.props);\n    return <React.Fragment>{this._getAlbumInfo(albumInfo)}</React.Fragment>;\n  }\n}\n\nexport default AlbumInfo;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Container } from \"reactstrap\";\nimport \"./DataTableView.css\";\nimport AlbumInfo from \"../AlbumInfo/AlbumInfo\";\n\nclass DataTableView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlbumInfo: false,\n      selected: null,\n      rowInfo: null,\n      rowEdit: null,\n      selectionChanged: false,\n      columns: [\n        {\n          id: \"id\",\n          Header: props => <span>ID</span>,\n          accessor: d => d.id,\n          width: 80\n        },\n        {\n          id: \"image\",\n          Header: props => <span>Photo</span>,\n          accessor: d => {\n            return (\n              <div>\n                <img className=\"images\" height={30} src={d.thumbnailUrl} />\n              </div>\n            );\n          },\n          width: 120\n        },\n        {\n          id: \"name\",\n          Header: \"Name\",\n          accessor: d => d.title.toUpperCase(),\n          width: 400\n        },\n        {\n          id: \"code\",\n          Header: \"Code\",\n          accessor: d => \" Color Code = #\" + d.url.toUpperCase().slice(32, 100),\n          width: 180\n        },\n        {\n          id: \"description\",\n          Header: \"URL\",\n          accessor: d => d.url,\n          width: 250\n        }\n      ],\n      pageSizeOptions: [100, 250, 500, 1000, 5000],\n      defaultResized: [100, 100, 10, 1]\n    };\n\n    this._onRowClick = this._onRowClick.bind(this);\n    this.onHideClick = this.onHideClick.bind(this);\n  }\n\n  _showAlbumInfo() {\n    return (\n      this.state.showAlbumInfo && (\n        <AlbumInfo\n          rowInfo={this.state.rowInfo}\n          onHideClick={() => this.onHideClick()}\n        />\n      )\n    );\n  }\n\n  onHideClick() {\n    return this.setState({\n      showAlbumInfo: false\n    });\n  }\n\n  _onRowClick(e, t, rowInfo) {\n    this.setState({\n      selected: rowInfo.index,\n      showAlbumInfo: true,\n      rowInfo: rowInfo.original\n    });\n    console.log(rowInfo, e, t, rowInfo.original.url, rowInfo.original.id);\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(\"from view \", this.props.data);\n    return (\n      <React.Fragment>\n        {this._showAlbumInfo()}\n        <Container className=\"container-class\">\n          <ReactTable\n            className=\"-striped -highlight\"\n            resizable={true}\n            defaultResized={this.state.defaultResized}\n            showPageJump\n            defaultPageSize={50}\n            data={this.props.data}\n            columns={this.state.columns}\n            pageSizeOptions={this.state.pageSizeOptions}\n            getTrProps={(state, rowInfo) => {\n              if (rowInfo && rowInfo.row) {\n                return {\n                  onClick: (e, t) => {\n                    console.log(\"inside\");\n                    this._onRowClick(e, t, rowInfo);\n                    if (rowInfo.index != this.state.rowEdit) {\n                      this.setState({\n                        rowEdit: rowInfo.index,\n                        selectedRowIndex: rowInfo.original,\n                        selectionChanged: this.state.selectionChanged\n                          ? false\n                          : true\n                      });\n                    } else {\n                      this.setState({\n                        rowEdit: null\n                      });\n                    }\n                    console.log(rowInfo.index);\n                    console.log(this.state.rowEdit);\n                  },\n                  style: {\n                    background:\n                      rowInfo.index === this.state.rowEdit ? \"silver\" : \"#9e9e9e\",\n                    color:\n                      rowInfo.index === this.state.rowEdit ? \"white\" : \"white\"\n                  }\n                };\n              } else {\n                return {};\n              }\n            }}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DataTableView;\n","const AppConfig = {\n  base_url: \"\",\n  api_base_url: \"https://jsonplaceholder.typicode.com/photos\",\n  \n};\n\nexport default AppConfig;\n","import axios from \"axios\";\nimport AppConfig from \"../../AppConfig\";\n\nclass APIService {\n  static initInterceptor = () => {\n    axios.interceptors.request.use(\n      function(config) {\n        // if (config.url.indexOf('api') > -1) {\n        //     config.url = UtilService.getApiUrl(config.url, UtilService.getHostName());\n        // }\n\n        return config;\n      },\n      function(error) {\n        return Promise.reject(error);\n      }\n    );\n\n    axios.interceptors.response.use(\n      response => response,\n      error => {\n        if (error.response && error.response.status === 401)\n          window.location.href = AppConfig.unauthorizedUrl;\n        else return Promise.reject(error);\n      }\n    );\n  };\n\n  static get = (url, config) => {\n    return config ? axios.get(url, config) : axios.get(url);\n  };\n\n  static post = (url, data, config) => {\n    if (!data) {\n      throw new Error(\"Error: Post data not provided for \" + url);\n    }\n    return config ? axios.post(url, data, config) : axios.post(url, data);\n  };\n}\n\nAPIService.initInterceptor();\n\nexport default APIService;\n","import APIService from \"../APIService/APIService\";\n\nclass DataService {\n  constructor() {}\n\n  getRequiredData() {\n    return APIService.get(`https://jsonplaceholder.typicode.com/photos`).then(\n      response => {\n        return response.data;\n      }\n    );\n  }\n}\n\nexport default DataService;\n","import React, { Component } from \"react\";\nimport DataTableView from \"./DataTableView\";\nimport DataService from \"./../../Services/DataService/DataService\";\n\nclass DataTable extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"From DataTable\", this.props.data);\n    this.state = {\n      data: []\n    };\n\n    this.DataService = new DataService();\n    this.getData = this.getData.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    this.DataService.getRequiredData().then(data => {\n      console.log(\"Getting Data\");\n      this.setState({\n        data: data\n      });\n      console.log(\"Updated Data\", this.state.data);\n    });\n  }\n\n  render() {\n    return <DataTableView {...this.state} />;\n  }\n}\n\nexport default DataTable;\n"],"sourceRoot":""}